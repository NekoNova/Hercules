//===== Hercules Script ======================================
//= Kafra Functions Library
//===== By: ==================================================
//= Olivar
//===== Current Version: =====================================
//= 1.0
//===== Description: =========================================
//= These functions handle save, storage, cart rental, teleport,
//= and Free Teleport/Warp/Rent Cart options for all Kafra NPCs.
//=
//= Kafra's will need a lot of work. The Welcome Message argument
//= may become obsolete, as most kafras have a slightly differing
//= Welcome message.
//============================================================

//=== Main Function ========================================================
//=   arg(0): Used to determine which welcome message to show.
//=   arg(1): Used to determine which menu to display.
//=   arg(2): Used to determine if the info menu is shown in F_KafInfo.
//=   arg(3): Cost to use Storage
//=   arg(4): Cost to Rent a Pushcart
//==========================================================================
function	script	F_Kafra	{
	callfunc "F_ClearGarbage"; // Clear outdated, unused variables
	// Display Kafra Welcome Message
	mes "[Kafra Employee]";
	mes "Welcome to the";
	mes "Kafra Corporation.";
	mes "The Kafra services";
	mes "are always on your side.";
	mes "How may I assist you?";
	next;
	
	while (1) {
		deletearray @K_Menu0$[0],getarraysize(@K_Menu0$);
		setarray @K_Menu0$[0],"Save","Use Storage","Use Teleport Service","Rent a Pushcart","Check Other Information","Cancel";		
		set .@menu$,"";
		
		for (set .@i, 0; .@i < getarraysize(@K_Menu0$); set .@i, .@i + 1)
			set .@menu$, .@menu$ + @K_Menu0$[.@i] + ":";	
		
		set .@j, select (.@menu$) - 1;
		
		if (@K_Menu0$[.@j] == "Save") {
			return;
		} else if (@K_Menu0$[.@j] == "Use Storage") {
			// Do not charge for Guild Storage
			if(getarg(0) == 2) 
				callfunc "F_KafStor",2,0,0;
			else 
				callfunc "F_KafStor",0,getarg(3),getarg(0);
			next;
		} else if (@K_Menu0$[.@j] == "Use Teleport Service") {
			// Display Einbroch "No Teleport Service" notice.
			if(getarg(1) != 4) {
				callfunc "F_KafTele",getarg(0);
			}
			else {
				mes "[Kafra Employee]";
				mes "Because of the ^FF0000Limited";
				mes "Transport Agreement^000000, the";
				mes "Kafra Corporation cannot";
				mes "provide Teleport Services";
				mes "in the Schwaltzvalt Republic.";
				next;
				mes "[Kafra Employee]";
				mes "We ask that you please";
				mes "use the Airship Service";
				mes "instead. Thank you for your";
				mes "understanding and cooperation.";
			}
			next;
		} else if (@K_Menu0$[.@j] == "Rent a Pushcart") {
			if(callfunc("F_KafCart",getarg(0),getarg(4)) == 1) 
				next;
		} else if (@K_Menu0$[.@j] == "Check Other Information") {
			callfunc "F_KafInfo",getarg(2);
			next;
		} else if (@K_Menu0$[.@j] == "Cancel"){
			callfunc "F_KafEnd",getarg(0),0;
			end;
		} else if (@K_Menu0$[.@j] == "Use Guild Storage") {
			callfunc "F_KafStor",1,0;
			next;
		}
	}
}

//===================================================
// Storage Function
//===================================================
function	script	F_KafStor	{
	// Unable to access Guild Storage (Busy)
	if(getarg(0) == 1){
		if(guildopenstorage()){
			mes "[Kafra Employee]";
			mes "I'm sorry but another guild member is using the guild storage";
			mes "right now.  Please wait until that person is finished.";
			close2;
			cutin "", 255;
			end;
		}
		cutin "", 255;
		close;
	}
	// Unable to access Normal Storage (Insufficient Basic Skills)
	if(basicskillcheck() && getskilllv("NV_BASIC") < 6){
		mes "[Kafra Employee]";
		mes "I'm sorry, but you";
		mes "need the Novice's";
		mes "Basic Skill Level 6 to";
		mes "use the Storage Service.";
		return;
	}
	// Accessing Normal Storage (Skipped if accessing Storage from Guild castle)
	if(getarg(0) != 2){
		// Consume "Free Ticket for Kafra Storage" if available.
		if(countitem(7059)) delitem 7059,1;
		else {
			if(Zeny<getarg(1)){
				mes "[Kafra Employee]";
				mes "I'm sorry, but you don't";
				mes "have enough zeny to use";
				mes "the Storage Service. Our";
				mes "Storage access fee is "+getarg(1)+" zeny.";
				return;
			}
			Zeny -= getarg(1);
			set RESRVPTS, RESRVPTS + (getarg(1)/5);
		}
	}

	// Surpress the "End" message if in guild castle.
	if (getarg(0) != 2) {
		mes "[Kafra Employee]";
		mes "Here, let me open";
		mes "your Storage for you.";
		mes "Thank you for using";
		mes "the Kafra Service.";
	}
	callfunc("F_CheckKafCode");	//check your storage password, if set
	close2;
	openstorage;
	cutin "", 255;
	end;
}

//===================================================
// Teleport Function
//===================================================
function	script	F_KafTele	{
	mes "[Kafra Employee]";
	mes "Please choose";
	mes "your destination.";
	next;
	set .@menu$, "";
	for (set .@i, 0; .@i <= 6; set .@i, .@i + 1)
		set .@menu$, .@menu$ + @wrpC$[.@i] + ":";
	set .@j, select (.@menu$) - 1;
	if (@wrpC$[.@j] == "Cancel") return;
	// Consume "Free Ticket for Kafra Transportation" if available.
	// Do not consume if in Guild castle
	if(countitem(7060) > 0 && getarg(0) != 1) delitem 7060,1;
	else {
		if (Zeny<@wrpP[.@j]){
			mes "[Kafra Employee]";
			mes "I'm sorry, but you don't have";
			mes "enough zeny for the Teleport";
			mes "Service. The fee to teleport";
			mes "to "+@wrpD$[.@j]+" is "+@wrpP[.@j]+" zeny.";
			close2;
			cutin "", 255;
			end;
		}
		Zeny -= @wrpP[.@j];
		set RESRVPTS, RESRVPTS + (@wrpP[.@j]/16);
	}
	cutin "", 255;
	
	// Warp the player to the correct location based on the selection he made
	// from the Teleport Menu.
	if (@wrpD$[.@j] == "Alberta") warp "alberta",28,234;
	else if (@wrpD$[.@j] == "Al De Baran") warp "aldebaran",140,131;
	else if (@wrpD$[.@j] == "Amatsu") warp "amatsu",198,84;
	else if (@wrpD$[.@j] == "Ayothaya") warp "ayothaya",208,166;
	else if (@wrpD$[.@j] == "Brasilis") warp "brasilis",196,217;
	else if (@wrpD$[.@j] == "Comodo") warp "comodo",209,143;
	else if (@wrpD$[.@j] == "Dewata") warp "dewata",200,180;
	else if (@wrpD$[.@j] == "Eclage") warp "ecl_in01",48,53;
	else if (@wrpD$[.@j] == "Einbech") warp "einbech",63,35;
	else if (@wrpD$[.@j] == "Einbroch") warp "einbroch",64,200;
	else if (@wrpD$[.@j] == "El Discastes") warp	"dicastes01",198,187;
	else if (@wrpD$[.@j] == "Geffen") warp "geffen",119,59;
	else if (@wrpD$[.@j] == "Gonryun") warp "gonryun",160,120;
	else if (@wrpD$[.@j] == "Hugel") warp "hugel",96,145;
	else if (@wrpD$[.@j] == "Izlude") warp "izlude",128,114;
	else if (@wrpD$[.@j] == "Jawaii") warp "jawaii",251,132;
	else if (@wrpD$[.@j] == "Lighthalzen") warp "lighthalzen",158,92;
	else if (@wrpD$[.@j] == "Louyang") warp "louyang",217,100;
	else if (@wrpD$[.@j] == "Lutie") warp "xmas",147,134;
	else if (@wrpD$[.@j] == "Malangdo") warp "malangdo",140,114;
	else if (@wrpD$[.@j] == "Malaya") warp "malaya",212,206;
	else if (@wrpD$[.@j] == "Manuk") warp "manuk",282,138;
	else if (@wrpD$[.@j] == "Midgarts Expedition Camp") warp "mid_camp",210,288;
	else if (@wrpD$[.@j] == "Mora") warp "mora",55,146;
	else if (@wrpD$[.@j] == "Morroc") warp "morocc",156,93;
	else if (@wrpD$[.@j] == "Moscovia") warp "moscovia",223,184;
	else if (@wrpD$[.@j] == "Payon") warp "payon",179,100;
	else if (@wrpD$[.@j] == "Rachel") warp "rachel",130,110;
	else if (@wrpD$[.@j] == "Splendide") warp "splendide",201,147;
	else if (@wrpD$[.@j] == "Thor Camp") warp "thor_camp",246,68;
	else if (@wrpD$[.@j] == "Umbala") warp "umbala",97,153;
	else if (@wrpD$[.@j] == "Veins") warp "veins",216,123;
	else if (@wrpD$[.@j] == "Yuno") warp "yuno",157,51;	
}


//===================================================
// Cart Function
//===================================================
function	script	F_KafCart	{
	// Ensure that the class wanting to rent a pushcart is a merchant
	if(BaseClass != Job_Merchant){
		mes "[Kafra Employee]";
		mes "I'm sorry, but the";
		mes "Pushcart rental service";
		mes "is only available to Merchants,";
		mes "Blacksmiths, Master Smiths,";
		mes "Alchemists and Biochemists.";
		return 1;
	}
	// Make sure the invoking character does not have a cart already
	else if(checkcart() == 1){
		mes "[Kafra Employee]";
		mes "You already have";
		mes "a Pushcart equipped.";
		mes "Unfortunately, we can't";
		mes "rent more than one to";
		mes "each customer at a time.";
		return 1;
	}
	// Consume "Free Ticket for the Cart Service" if available.
	// Do not consume if in Guild castle.
	if(countitem(7061) > 0 && getarg(0) != 2) delitem 7061,1;
	else {
		mes "[Kafra Employee]";
		mes "The Pushcart rental";
		mes "fee is "+getarg(1)+" zeny. Would";
		mes "you like to rent a Pushcart?";
		next;
		if (select("Rent a Pushcart.:Cancel") == 2) return 0;
			if(Zeny<getarg(1)){
				mes "[Kafra Employee]";
				mes "I'm sorry, but you";
				mes "don't have enough";
				mes "zeny to pay the Pushcart";
				mes "rental fee of "+getarg(1)+" zeny.";
				return 1;
			}
			Zeny -= getarg(1);
			set RESRVPTS, RESRVPTS + 48;
	}
	setcart;
	return 1;
}

//===================================================
// Special Reserve Points Function
//===================================================
function	script	F_KafInfo	{
	// Uncomment next line to block Kafra Storage Protection
	//	set .@block, 1;
		setarray .@m$, "Check Special Reserve Points.","Storage Password Service","Kafra Employee Locations","Cancel";
		if (getarg(0) == 2) deletearray .@m$[1],2; // Port Malaya, Rune Knight
		else if (.@block) deletearray .@m$[1],1;
	while (1) {
		set .@j, select(implode(.@m$,":")) - 1;
		if (.@m$[.@j] == "Check Special Reserve Points.") {
			mes "[Kafra Employee]";
			mes "Let's see...";
			mes strcharinfo(0) + "...";
			mes "Ah, you have a total of";
			mes RESRVPTS+ " Special Reserve Points.";
			next;
			mes "[Kafra Employee]";
			mes "You can exchange your";
			mes "Special Reserve Points for";
			mes "rewards at the Kafra Main Office in Al De Baran. Please use our";
			mes "convenient services to see the benefits of our rewards program.";
			next;
			if(getarg(0) == 1) return;
		} else if (.@m$[.@j] == "Kafra Employee Locations") {
			for (set .@i, 0; .@i <= 3; set .@i, .@i + 1)
				viewpoint 1,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
			next;
			for (set .@i, 0; .@i <= 3; set .@i, .@i + 1)
				viewpoint 2,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
		} else if (.@m$[.@j] == "Storage Password Service") {
			callfunc("F_SetKafCode","[Kafra Employee]","Kafra Services");
		} else {
			return;
		}
	}
}

// === End Function ==================================================
//  arg(0): used to determine what message to display.
//  arg(1): used to determine if save message is displayed.
//===================================================================
function	script	F_KafEnd	{
	mes "[Kafra Employee]";
	if(getarg(1)==1) {	
		mes "Your Respawn Point";
		mes "has been saved here";
		mes strnpcinfo(4)+".";
		mes "Thank you for using";
		mes "the Kafra Services.";
	} else {	
		mes "We, here at Kafra Corporation,";
		mes "are always endeavoring to provide you with the best services. We hope that we meet your adventuring needs and standards of excellence.";
	}
	close2;
	cutin "", 255;
	end;
}

//===================================================
// Check Storage Password Function
//===================================================
function	script	F_CheckKafCode	{
	if(!#kafra_code) return;
	mes "Enter your storage password:";
	set @code_,0;
	input @code_;
	if(@code_ != #kafra_code) {
		dispbottom "Wrong storage password.";
		close2;
		cutin "",255;
		end;
	}
	set @kafcode_try,0;
	set @code_,0;
	return;
}

// === Set / Change / Clear Storage Password Function ===
// getarg(0): NPC Name
// getarg(1): Company Name
//=======================================================
function	script	F_SetKafCode	{
	mes getarg(0);
	if(#kafra_code) {
		mes "Your storage is protected with a password. What would you do now?";
		next;
		switch (select("Change old password -> 5000z:Remove storage password -> 1000z:Cancel")) {
			case 1:
				mes getarg(0);
				mes "At first, please enter your ^0000FFold password^000000.";
				set @code,callfunc("F_EntKafCode");
				if(!@code || @code != #kafra_code) {
					mes "Wrong password. You can't set a new password.";
					emotion e_hmm;
					break;
				}
				next;
				callsub S_SET,getarg(0),getarg(1);
				break;
			case 2:
				mes getarg(0);
				mes "Please, enter your password before its removal.";
				set @code,callfunc("F_EntKafCode");
				if(!@code) {
					mes "The password hasn't been removed.";
					emotion e_hmm;
					break;
				}
				next;
				mes getarg(0);
				if(Zeny < 1000) {
					mes "You don't have enough zeny.";
					emotion e_cash;
					break;
				}
				Zeny -= 1000;
				if(@code == #kafra_code) {
					set #kafra_code,0;
					mes "You've successfully cleared your storage password.";
					mes "Thank you for using "+getarg(1)+".";
					emotion e_thx;
				} else {
					mes "Wrong password. We won't return your 1000z.";
					mes "Please, next time enter correct password.";
					emotion e_sry;
				}
				break;
			case 3:
				break;
		}
	} else {
		mes getarg(1)+" proudly presents you a new service:";
		mes "Additional storage protection with a password.";
		next;
		switch (select("Set new password -> 5000z:Cancel")) {
			case 1: callsub S_SET,getarg(0),getarg(1); break;
			case 2: break;		
		}
	}
	close2;
	cutin "",255;
	end;

S_SET:
	mes getarg(0);
	mes "Now enter your ^FF0000new password^000000 to protect your storage from thieves.";
	set @code,callfunc("F_EntKafCode");
	if(!@code) {
		mes "The password hasn't been changed.";
		emotion e_hmm;
		return;
	}
	next;
	mes getarg(0);
	if(Zeny < 5000) {
		mes "You don't have enough zeny.";
		emotion e_cash;
		return;
	}
	Zeny -= 5000;
	set #kafra_code,@code;
	mes "You've protected your storage with a secret password.";
	mes "Thank you for using "+getarg(1)+".";
	emotion e_thx;
	return;
}

//===================================================
// Basic Password Validation Function
//===================================================
function	script	F_EntKafCode	{
	mes "Enter a number 1000~10000000:";
	set @code_,0;
	set @kafcode_try,@kafcode_try+1;
	if(@kafcode_try>10) {
		set @kafcode_try,0;
		logmes "Hack: Tried to fit storage password.";
	}
	if(input(@code_) == 1) {
		mes "You can't use such big password.";
		return 0;
	}
	if(@code_<1000) {
		mes "You shouldn't use such short password.";
		return 0;
	}
	return @code_;
}

//===================================================
// Warp Points / View Points Function
//===================================================
function	script	F_KafSet	{
	cleararray @wrpC$[0],"",getarraysize(@wrpC$);
	cleararray @wrpD$[0],"",getarraysize(@wrpD$);
	cleararray @wrpP$[0],"",getarraysize(@wrpP$);
	cleararray @viewpX[0],"",getarraysize(@viewpX);
	cleararray @viewpY[0],"",getarraysize(@viewpY);
	
	// Regardless of the location, we offer teleports to every
	// town where our Kafra are located
	setarray @wrpD$[0], "Prontera","Alberta","Aldebaran","Amatsu","Ayothaya","Brasilis",
						"Comodo","Dewata","Eclage","Einbech","Einbroch","El Dicastes", "Geffen",
						"Gonryun","Hugel","Izlude","Jawaii","Lighthalzen", "Louyang",
						"Lutie","Malangdo","Malaya","Manuk","Midgarts Expedition Camp","Mora",
						"Morroc","Moscovia","Payon","Rachel","Splendide","Thor Camp",
						"Umbala","Veins","Yuno";
	setarray @wrpP[0], 	0,0,0,0,0,0,
						0,0,0,0,0,0,
						0,0,0,0,0,0,
						0,0,0,0,0,0,
						0,0,0,0,0,0,
						0,0,0;
	
	for (set .@i, 0; .@i < getarraysize(@wrpD$); set .@i, .@i + 1)
		setd "@wrpC$["+.@i+"]",getd("@wrpD$["+.@i+"]")+" -> "+getd("@wrpP["+.@i+"]");
	setd "@wrpC$["+getarraysize(@wrpC$)+"]","Cancel";
	return;
}
