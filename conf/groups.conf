/*

Player groups configuration file
---------------------------------

This file defines "player groups" and their privileges.

Each group has its id and name, lists of available commands and other 
permissions, and a list of other groups it inherits from.


Group settings
--------------
<id>
Unique group number. The only required field.

<name>
Any string. If empty, defaults to "Group <id>". It is used in several @who 
commands.

<level>
Equivalent of GM level, which was used in revisions before r15572. You can 
set it to any number, but usually it's between 0 (default) and 99. Members of 
groups with lower level can not perform some actions/commands (like @kick) on 
members of groups with higher level. It is what script command getgmlevel() 
returns. Group level can also be used to override trade restrictions 
(db/item_trade.txt).

<commands>
A group of settings
	<command name> : <bool>
or
	<commandname> : [ <bool>, <bool> ]
First boolean value is for atcommand, second one for charcommand. If set to 
true, group can use command. If only atcommand value is provided, false is 
assumed for charcommand. If a command name is not included, false is assumed for 
both atcommand and charcommand.
For a full list of available commands, see: doc/atcommands.txt.
Command names must not be aliases.

<log_commands>
Boolean value. If true then all commands used by the group will be logged to 
atcommandlog. If setting is omitted in a group definition, false is assumed.
Requires 'log_commands' to be enabled in 'conf/logs.conf'.

<permissions>
A group of settings
	<permission> : <bool>
If a permission is not included, false is assumed.
For a full list of available permissions, see: doc/permissions.txt

<inherit>
A list of group names that given group will inherit commands and permissions 
from. Group names are case-sensitive.

Inheritance results
-------------------
Both multiple inheritance (Group 2 -> Group 1 and Group 3 -> Group 1) and
recursive inheritance (Group 3 -> Group 2 -> Group 1) are allowed.

Inheritance rules should not create cycles (eg Group 1 inherits from Group 2, 
and Group inherits from Group 1 at the same time). Configuration with cycles is 
considered faulty and can't be processed fully by server.

Command or permission is inherited ONLY if it's not already defined for the 
group.
If group inherits from multiple groups, and the same command or permission is 
defined for more than one of these groups, it's undefined which one will be 
inherited.

Syntax
------
This config file uses libconfig syntax: 
http://www.hyperrealm.com/libconfig/libconfig_manual.html#Configuration-Files
*/

groups: (
{
	id: 0 /* group 0 is the default group for every new account */
	name: "Player"
	level: 0
	inherit: ( /*empty list*/ )
	commands: {
		/* Atherea commands for players */
		commands: true
		charcommands: true
		help: true
		rates: true
		uptime: true
		showdelay: true
		exp: true
		mobinfo: true
		iteminfo: true
		whodrops: true
		time: true
		jailtime: true
		hominfo: true
		homstats: true
		showexp: true
		showzeny: true
		whereis: true
		/* feature commands */
		refresh: true
		noask: true
		noks: true
		autoloot: true
		alootid: true
		autoloottype: true
		autotrade: true
		request: true
		breakguild: true
		channel: true
		me: true
		duel: true
		invite: true
		accept: true
		reject: true
		leave: true
		whogm: true
	}
	permissions: {
		/* without this basic permissions regular players could not 
		trade or party */
		can_trade: true
		can_party: true
	}
},
{
	id: 1
	name: "Super Player"
	inherit: ( "Player" ) /* can do everything Players can and more */
	level: 0
	commands: {
		/* informational commands */
		commands: true
		charcommands: true
		help: true
		rates: true
		uptime: true
		showdelay: true
		exp: true
		mobinfo: true
		iteminfo: true
		whodrops: true
		time: true
		jailtime: true
		hominfo: true
		homstats: true
		showexp: true
		showzeny: true
		whereis: true
		/* feature commands */
		refresh: true
		noask: true
		noks: true
		autoloot: true
		alootid: true
		autoloottype: true
		autotrade: true
		request: true
		go: true
		breakguild: true
		channel: true
	}
	permissions: {
	}
},
{
	id: 40
	name: "Trial"
	inherit: ( "Super Player" )
	level: 1
	commands: {
		version: true
		where: true
		jailfor: true
		mute: true
		jumpto: true
		who: true
		who2: true
		who3: true
		whomap: true
		whomap2: true
		whomap3: true
		users: true
		broadcast: true
		localbroadcast: true
		whogm: true
		blvl: true
		jlvl: true
		allstats: true
		allskill: true
		jobchange: true
		jlvl: true
		mount: true
		mount2: true
		heal: true
		hairstyle: true
		haircolor: true
		dye: true
		alive: true
		hairstyle: true
		haircolor: true
		dye: true
		speed: true
		hide: true
		follow: true
		kick: true
		disguise: true
		undisguise: true
		fakename: true
		size: true
		warp: true
	}
	log_commands: true
	permissions: {
		receive_requests: true
		view_equipment: true
		all_skill: true
		all_equipment: true
		skill_unconditional: true
		any_warp: true
	}
},
{
	id: 50
	name: "Script Manager"
	inherit: ( "Trial" )
	level: 1
	commands: {
		tonpc: true
		hidenpc: true
		shownpc: true
		loadnpc: true
		unloadnpc: true
		npcmove: true
		addwarp: true
		reloadscript: true
	}
	log_commands: true
	permissions: {
		any_warp: true

	}
},
{
	id: 60
	name: "Game Manager"
	inherit: ( "Trial" )
	level: 60
	commands: {
		hide: true
		monster: true
		monstersmall: true
		monsterbig: true
		killmonster2: true
		cleanarea: true
		cleanmap: true
		fakename: true
		disguise: [true, true]
		undisguise: [true, true]
		size: [true, true]
		raisemap: true
		day: true
		night: true
		skillon: true
		skilloff: true
		pvpon: true
		pvpoff: true
		gvgon: true
		gvgoff: true
		allowks: true
		me: true
		marry: true
		divorce: true
		refreshall: true
		recall: true
		warp: true
		jailfor: true
		mute: true
		mapinfo: true
		skillid: true
		skilltree: true
		useskill: true
		cartlist: true
		save: true
		load: true
		jump: true
		monsterignore: true
		npctalk: true
		nuke: true
		makeegg: true
		hatch: true
		pettalk: true
		petrename: true
		petfriendly: true
		makehomun: true
		homevolution: true
		homfriendly: true
		homtalk: true
		homlevel: true
		storage: true
		guildstorage: true
		storeall: true
		killer: true
		summon: true
		doommap: true
		effect: [true, true]
	}
	log_commands: true
	permissions: {
		join_chat: true
		kick_chat: true
		hide_session: true
		who_display_aid: true
		hack_info: true
		any_warp: true
		view_hpmeter: true
	}
},
{
	id: 80
	name: "Head GM"
	inherit: ( "Script Manager" )
	level: 60
	commands: {
		hide: true
		follow: true
		kick: true
		monster: true
		killmonster2: true
		disguise: [true, true]
		undisguise: [true, true]
		fakename: true
		size: [true, true]
		raisemap: true
		option: true
		speed: true
		warp: true
		kill: true
		recall: true
		jailfor: true
		mute: true
		storagelist: true
		cartlist: true
		itemlist: true
		stats: true
		skillon: true
		skilloff: true
		pvpon: true
		pvpoff: true
		hidenpc: true
		shownpc: true
		npcmove: true
		mapinfo: true
		skillid: true
		skilltree: true
		useskill: true
		cartlist: true
		save: true
		load: true
		jump: true
		monsterignore: true
		npctalk: true
		nuke: true
		makeegg: true
		hatch: true
		pettalk: true
		petrename: true
		petfriendly: true
		makehomun: true
		homevolution: true
		homfriendly: true
		homtalk: true
		homlevel: true
		storage: true
		guildstorage: true
		storeall: true
		killer: true
		summon: true
		doommap: true
		effect: [true, true]
	}
	log_commands: true
	permissions: {
		join_chat: true
		kick_chat: true
		hide_session: true
		who_display_aid: true
		hack_info: true
		any_warp: true
		view_hpmeter: true
	}
},
{
	id: 99
	name: "Admin"
	level: 99
	inherit: ( "Trial", "Head GM" )
	commands: {
		/* not necessary due to all_commands: true */
	}
	log_commands: true
	permissions: {
		can_trade: true
		can_trade_bound: true
		can_party: true
		all_skill: true
		all_equipment: true
		skill_unconditional: true
		use_check: true
		use_changemaptype: true
		all_commands: true
		hchsys_admin: true
	}
}
)

